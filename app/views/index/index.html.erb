<script>

    var all_time = [];
    <% @repositories.each do |r| %>
      var entries = [ <%= r.counts.order(:record_date).collect { |c| "[#{c.record_date.to_i * 1000},#{c.value}]"}.join(",") %> ]
      all_time.push({ label: "<%= r.name %>", data: entries });
    <% end %>

  function repo_is_selected(repo) {
    var selected = [];
    jQuery.each($('input:[name="repo"]:checked'), function(index, input) {
      selected.push(input.value);
    });

    len =  jQuery.grep(selected, function(n,i) {
       return repo == n }).length;

    return len > 0;
  }

  function show_since(time) {
    dataset = [];

    for(i = 0; i < all_time.length; i++){
      if(repo_is_selected(all_time[i]['label']) ){
        entries = [];
        for(j = 0; j < all_time[i]['data'].length; j++) {
          datapoint = all_time[i]['data'][j];
          if(datapoint[0] > time) {
            entries.push(datapoint);
          }
        }
        dataset.push({ 'label': all_time[i]['label'],
                       'data': entries });
      }
    }

    show_graph(dataset);
  }

  function show_graph(dataset) {
    for (var i=0;i<dataset.length;i++) {
      var data = dataset[i].data
        , current = 0
        ;
      for (var x=0;x<data.length;x++) {
        if (data[x][1] && data[x][1] > (0.15 * current)) {
          current = data[x][1]
        } else {
          data[x][1] = current
        }
      }
    }

    $.plot($("#count-graph"), dataset, {
                              series: { lines: { show: true },
                                        points: { show: true,
                                                  radius: 1 }},
                              xaxis: { mode: "time" },
                              legend: { position: "nw" } });

  }


  $(document).ready(function(){
    start = $('input:[name="start"]:checked').val();
    show_since(start);

    $("input").click(function(event) {
      start = $('input:[name="start"]:checked').val();
      show_since(start);
    });

  });
</script>
<style>
table.module-data {
    width: 750px;
    margin: auto;
    margin-top: 30px;
    margin-bottom: 30px;
}

.module-data td {
    text-align: center;
}

td.left {
    text-align: left;
}

td.right,th.right {
    text-align: right;
}

#graph-center {
    margin: auto;
    width: 770px;
}

#graph-display {
    position: relative;
    height: 400px;
}

#count-graph {
    float: left;
    width: 550px;
    height: 350px;
}

#content-control {
    float: right;
    padding-left: 15px;
}

#time-controls {
    float: left;
    clear: left;
    padding-top: 10px;
    width: 600px;

}

.controls ul {
    padding: 0px;
}

.controls li {
    list-style-type: none;
}

.controls li.list_header {
    margin: 0px 0px 5px 15px;
    font-weight: bold;
}

.horizontal li {
    margin-left: 5px;
    display: inline;
}

</style>
<h1>Module Counts</h1>
<div id="graph-center">
<div id="graph-display">
<form id="graph">
<div id="count-graph"></div>
<div id="content-control" class="vertical controls">
  <ul>
  <li class="list_header">Include</li>

    <% @repositories.each do |r| %>
  <li> <input type="checkbox" name="repo" value="<%= r.name %>"
     <% if r.graph %>checked<% end %>> <%= r.name %></li>
    <% end %>
  </ul>
</div>
<div id="time-controls" class="horizontal controls">
  <ul>
    <li class="list_header">time period</li>
    <% if Count.earliest.record_date < Time.now - 1.year %>
      <% all_time_checked = '' %>
      <% last_year_checked = 'checked' %>
    <% else %>
      <% all_time_checked = 'checked' %>
      <% last_year_checked = '' %>
    <% end %>
    <li><input type="radio" name="start" value="0" <%= all_time_checked %> > all time</li>
    <li><input type="radio" name="start" value="<%= (Time.now - 1.year).utc.to_i * 1000 %>" <%= last_year_checked %> > last year</li>
<% [90, 30, 7].each do |days| %>
    <li><input type="radio" name="start" value="<%= (Time.now - days.days).utc.to_i * 1000 %>"> last <%= days %> days</li>
<% end %>
  </ul>
</div>
</form>
</div>
</div>
<table class="module-data">
  <tr>
    <th></th>
    <% days_to_show = 7 %>
    <% (0..(days_to_show - 1)).each do |i| %>
      <% index = days_to_show - i - 1 %>
      <th><%= (@latest.record_date - (index).days).strftime "%b %e" %></th>
    <% end %>
    <th class="right">Avg Growth</th>
  </tr>
<% @repositories.each do |r| %>
  <tr>
    <td class="left"><a href="<%= r.url %>"><%= r.name %></a></td>
    <% recent = r.day_sequence(@latest.record_date - 6.days, 7) %>
    <% (0..(days_to_show - 1)).each do |i| %>
      <% index = - days_to_show + i %>
      <td><%= recent[index].try(:value) %></td>
    <% end %>
    <td class="right"><%= r.repository_stats.try(:modules_day).to_i %>/day</td>
  </tr>
<% end %>
</table>

<p>Data is collected by scraping the relevant websites once a day via
a cron job and then stored in a Postgresql database for later
retrieval. Growth rates are calculated by averaging data over the last
week. I'm gathering counts of separate modules, so multiple versions
of the same module/package/gem only count once (foo-1.2, foo-1.3 and
bar-1.0 would count as 2 total).
</p>
<p>(Nov 27, 2015) I upgraded to Rails 5 (alpha), and ruby 2.3.0-preview1.
  I also fixed the nuget repo, which got a site update that broke sampling
  some time ago. New repositories: Perl 6, and Drupal
</p>
<p>(Feb 2, 2014) Upgraded off the free database plan. The database had
outgrown Heroku's 100% free tier. It still qualifies for the hobby level,
though. Also added the Melpa (Emacs) repository, and update the Hackage
(Haskell) repository to use a different and hopefully more reliable data
source.</p>
<p>(Mar 30, 2013) Several folks asked me to add Maven Central. It's a
really big Java module repository. I look forward to seeing how fast it's
growing. For now, this is the first time we've had a change in the top spot
since Rubygems.org passed up CPAN in early 2011.</p>
<p>(Feb 28, 2013) Markus Fischer pointed out that there's a much bigger
and better PHP package archive called
<a href="http://packagist.org">Packagist</a>. It's been added to the list.
They have an awesome <a href="https://packagist.org/statistics">statistics page</a>.
</p>
<p>Several other folks reported issues with IE compatibility, CSV downloads
and chart layout. Hopefully those are all fixed now.
</p>
<p>I just (Nov 25, 2012) added the <a href="http://clojars.org">Clojars</a>
repository. Much thanks to Jonas Clasen
for pointing it out to me.
</p>
<p>
Much thanks to <a href="http://wwatson.me">W Watson</a> for pointing
out the <a href="http://nuget.org">nuget</a> (.NET) package
repository. I'd like
to add more repositories. If you have suggestions, please send them
to erik@debill.org.
</p>
<p>
CPAN and CPAN (search) used to be two conflicting sources for data
about how many modules are in CPAN.  During spring of 2011 CPAN got a
site refresh and the numbers came into line with each other. It looks
funny on the graph, but it's an interesting bit of history.
</p>
<p>
If you'd like to check out the data in more detail, you are welcome to <a href="/modulecounts.csv">download</a> it in a CSV file.
</p>
